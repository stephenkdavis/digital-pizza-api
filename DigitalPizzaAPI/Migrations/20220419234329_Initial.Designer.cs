// <auto-generated />
using System;
using DigitalPizzaAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalPizzaAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220419234329_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c94e2ee-199d-4c43-ad3d-78cac71c1c95"),
                            AccountId = 1,
                            City = "Terrace",
                            Label = "Fake Address 1",
                            Notes = "This is a fake testing address. It is not my real address.",
                            PostCode = "V8G 1S2",
                            Province = "British Columbia",
                            StreetName = "Burdett Avenue",
                            StreetNumber = 3898
                        },
                        new
                        {
                            Id = new Guid("756cb90a-fa3d-4cc1-a6dd-db57005aa05f"),
                            AccountId = 2,
                            City = "Toronto",
                            Label = "Home",
                            Notes = "",
                            PostCode = "L8A 0C3",
                            Province = "Ontario",
                            StreetName = "Clarence Court",
                            StreetNumber = 1183,
                            UnitNumber = "Suite 200"
                        },
                        new
                        {
                            Id = new Guid("f2a350d6-5a29-4984-b4e7-2a9c07cc5521"),
                            AccountId = 3,
                            City = "Southfield",
                            Label = "Home",
                            Notes = "",
                            PostCode = "H3Z 7B5",
                            Province = "Ontario",
                            StreetName = "Cross Street North",
                            StreetNumber = 1346,
                            UnitNumber = ""
                        },
                        new
                        {
                            Id = new Guid("a3144809-7c8f-4ed8-bcf7-527f68fc0a95"),
                            AccountId = 4,
                            City = "Toronto",
                            Label = "Home",
                            Notes = "Beware of guard cat",
                            PostCode = "A3H 1D8",
                            Province = "Ontario",
                            StreetName = "Aspen Court",
                            StreetNumber = 864,
                            UnitNumber = ""
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.Customer", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("RewardsCount")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            AccountId = 4,
                            RewardsCount = 3
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.DrinkList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DrinkList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsPremium = false,
                            Name = "Coke"
                        },
                        new
                        {
                            Id = 2,
                            IsPremium = false,
                            Name = "Sprite"
                        },
                        new
                        {
                            Id = 3,
                            IsPremium = false,
                            Name = "Barq's"
                        },
                        new
                        {
                            Id = 4,
                            IsPremium = false,
                            Name = "Fanta"
                        },
                        new
                        {
                            Id = 5,
                            IsPremium = false,
                            Name = "Ginger Ale"
                        },
                        new
                        {
                            Id = 6,
                            IsPremium = false,
                            Name = "Nestea"
                        },
                        new
                        {
                            Id = 7,
                            IsPremium = true,
                            Name = "Power Ade"
                        },
                        new
                        {
                            Id = 8,
                            IsPremium = true,
                            Name = "Peace Tea"
                        },
                        new
                        {
                            Id = 9,
                            IsPremium = true,
                            Name = "Gold Peak Tea"
                        },
                        new
                        {
                            Id = 10,
                            IsPremium = true,
                            Name = "Core Power Milk Shake"
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.Employee", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            HireDate = new DateTime(2022, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            RoleId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            HireDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            RoleId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            HireDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Cook"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Driver"
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("InOven")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnRoute")
                        .HasColumnType("bit");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            AddressId = new Guid("a3144809-7c8f-4ed8-bcf7-527f68fc0a95"),
                            CustomerId = 4,
                            InOven = false,
                            IsDelivered = true,
                            IsOnRoute = false,
                            StatusMessage = "Order delivered on 2022-03-18",
                            Timestamp = new DateTime(2022, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 29.949999999999999
                        },
                        new
                        {
                            OrderId = 2,
                            AddressId = new Guid("a3144809-7c8f-4ed8-bcf7-527f68fc0a95"),
                            CustomerId = 4,
                            InOven = true,
                            IsDelivered = false,
                            IsOnRoute = false,
                            StatusMessage = "Order in oven",
                            Timestamp = new DateTime(2022, 4, 19, 19, 43, 29, 99, DateTimeKind.Local).AddTicks(5072),
                            Total = 208.49000000000001
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.OrderItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DipId")
                        .HasColumnType("int");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OtherFoodId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("337499ed-9855-46a8-97cc-99e4f4f8e789"),
                            DipId = 0,
                            DrinkId = 1,
                            OrderId = 1,
                            OtherFoodId = 0,
                            PizzaId = 0,
                            Quantity = 3
                        },
                        new
                        {
                            ItemId = new Guid("463cd4eb-1375-45b8-b421-5d775eb1a820"),
                            DipId = 0,
                            DrinkId = 0,
                            OrderId = 1,
                            OtherFoodId = 0,
                            PizzaId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            ItemId = new Guid("3239cf3e-aa1d-407a-833d-a157827e738d"),
                            DipId = 0,
                            DrinkId = 3,
                            OrderId = 2,
                            OtherFoodId = 0,
                            PizzaId = 0,
                            Quantity = 6
                        },
                        new
                        {
                            ItemId = new Guid("2a3be73c-f051-4662-ac1a-51d114946234"),
                            DipId = 0,
                            DrinkId = 0,
                            OrderId = 2,
                            OtherFoodId = 0,
                            PizzaId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            ItemId = new Guid("6632b3de-1bbd-4529-8ba1-c8b24ccd72dc"),
                            DipId = 0,
                            DrinkId = 0,
                            OrderId = 2,
                            OtherFoodId = 0,
                            PizzaId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            ItemId = new Guid("8512aa11-1ff0-4297-8aa5-8f1a2b25da99"),
                            DipId = 0,
                            DrinkId = 0,
                            OrderId = 2,
                            OtherFoodId = 0,
                            PizzaId = 4,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.OrderPizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaId"), 1L, 1);

                    b.Property<bool>("IsPreset")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWellDone")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaSize")
                        .HasColumnType("int");

                    b.Property<int>("PresetId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId");

                    b.ToTable("OrderPizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            IsPreset = true,
                            IsWellDone = false,
                            OrderId = 1,
                            PizzaSize = 1,
                            PresetId = 5
                        },
                        new
                        {
                            PizzaId = 2,
                            IsPreset = false,
                            IsWellDone = false,
                            OrderId = 2,
                            PizzaSize = 2,
                            PresetId = 0
                        },
                        new
                        {
                            PizzaId = 3,
                            IsPreset = false,
                            IsWellDone = true,
                            OrderId = 2,
                            PizzaSize = 4,
                            PresetId = 0
                        },
                        new
                        {
                            PizzaId = 4,
                            IsPreset = true,
                            IsWellDone = true,
                            OrderId = 2,
                            PizzaSize = 3,
                            PresetId = 2
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.OrderToppings", b =>
                {
                    b.Property<Guid>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("ToppingId")
                        .HasColumnType("int");

                    b.HasKey("EntryId");

                    b.ToTable("OrderToppings");

                    b.HasData(
                        new
                        {
                            EntryId = new Guid("e8e16cd8-732f-4aed-9b45-450101de19eb"),
                            PizzaId = 2,
                            ToppingId = 3
                        },
                        new
                        {
                            EntryId = new Guid("051516e8-df82-48c8-b58a-50646b89f17e"),
                            PizzaId = 2,
                            ToppingId = 8
                        },
                        new
                        {
                            EntryId = new Guid("f1e491b9-ecb2-4bb6-b750-44e1360c904f"),
                            PizzaId = 2,
                            ToppingId = 14
                        },
                        new
                        {
                            EntryId = new Guid("25950908-c580-4fa9-86cf-6242a080e93b"),
                            PizzaId = 2,
                            ToppingId = 19
                        },
                        new
                        {
                            EntryId = new Guid("d5fe8118-0835-4a4c-9116-a3e68a88c676"),
                            PizzaId = 2,
                            ToppingId = 21
                        },
                        new
                        {
                            EntryId = new Guid("32aa16ec-fae3-4a07-b8c7-4c72b620809f"),
                            PizzaId = 2,
                            ToppingId = 26
                        },
                        new
                        {
                            EntryId = new Guid("382bca47-ccd4-4526-be37-3b23a634385f"),
                            PizzaId = 3,
                            ToppingId = 6
                        },
                        new
                        {
                            EntryId = new Guid("6dfe1ebe-16b5-4f74-89f9-b14c58c4c722"),
                            PizzaId = 3,
                            ToppingId = 13
                        },
                        new
                        {
                            EntryId = new Guid("ec3150e8-6956-4dfb-9461-4ef3e39a4001"),
                            PizzaId = 3,
                            ToppingId = 16
                        },
                        new
                        {
                            EntryId = new Guid("87c77d89-c39f-42c9-a493-eca8d9f03ab0"),
                            PizzaId = 3,
                            ToppingId = 17
                        },
                        new
                        {
                            EntryId = new Guid("c1d3bfe1-b721-4406-ad58-e37e1b90b035"),
                            PizzaId = 3,
                            ToppingId = 24
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.Person", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PwdHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            EmailAddress = "manager@test.com",
                            FirstName = "Stephen",
                            IsCustomer = false,
                            LastName = "Davis",
                            PhoneNumber = "647-787-4877",
                            PwdHash = "4AFD6013F1C4F90FCE7E3D29D91BB1F70D10DACFA75FE856FD3494F7CF823133"
                        },
                        new
                        {
                            AccountId = 2,
                            EmailAddress = "cook@test.com",
                            FirstName = "Sandra",
                            IsCustomer = false,
                            LastName = "Rutkowski",
                            PhoneNumber = "416-555-7310",
                            PwdHash = "4AFD6013F1C4F90FCE7E3D29D91BB1F70D10DACFA75FE856FD3494F7CF823133"
                        },
                        new
                        {
                            AccountId = 3,
                            EmailAddress = "driver@test.com",
                            FirstName = "Roger",
                            IsCustomer = false,
                            LastName = "Lee",
                            PhoneNumber = "647-555-2356",
                            PwdHash = "4AFD6013F1C4F90FCE7E3D29D91BB1F70D10DACFA75FE856FD3494F7CF823133"
                        },
                        new
                        {
                            AccountId = 4,
                            EmailAddress = "customer@test.com",
                            FirstName = "Laura",
                            IsCustomer = true,
                            LastName = "Kittinger",
                            PhoneNumber = "437-555-9721",
                            PwdHash = "4AFD6013F1C4F90FCE7E3D29D91BB1F70D10DACFA75FE856FD3494F7CF823133"
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.PresetPizza", b =>
                {
                    b.Property<int>("PresetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PresetId"), 1L, 1);

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PresetId");

                    b.ToTable("PresetPizzas");

                    b.HasData(
                        new
                        {
                            PresetId = 1,
                            BasePrice = 19.5,
                            Name = "Special Deluxe"
                        },
                        new
                        {
                            PresetId = 2,
                            BasePrice = 18.0,
                            Name = "Hawaiian Pizza"
                        },
                        new
                        {
                            PresetId = 3,
                            BasePrice = 24.0,
                            Name = "Vegetarian Pizza"
                        },
                        new
                        {
                            PresetId = 4,
                            BasePrice = 25.5,
                            Name = "Greek Special"
                        },
                        new
                        {
                            PresetId = 5,
                            BasePrice = 21.0,
                            Name = "Meat Lovers"
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.PresetTopping", b =>
                {
                    b.Property<Guid>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PresetId")
                        .HasColumnType("int");

                    b.Property<int>("ToppingId")
                        .HasColumnType("int");

                    b.HasKey("EntryId");

                    b.ToTable("PresetToppings");

                    b.HasData(
                        new
                        {
                            EntryId = new Guid("f9f27b47-dce4-4040-9801-22748164f475"),
                            PresetId = 1,
                            ToppingId = 6
                        },
                        new
                        {
                            EntryId = new Guid("549b265d-4346-4326-b0b2-d7e691228e84"),
                            PresetId = 1,
                            ToppingId = 19
                        },
                        new
                        {
                            EntryId = new Guid("9f1760d4-bc81-4d01-a331-e31ff92b617e"),
                            PresetId = 1,
                            ToppingId = 21
                        },
                        new
                        {
                            EntryId = new Guid("e49badd4-2197-4949-9e8b-1d6a30a26350"),
                            PresetId = 2,
                            ToppingId = 11
                        },
                        new
                        {
                            EntryId = new Guid("ec3a9b86-d359-48a0-84f5-30308304cd46"),
                            PresetId = 2,
                            ToppingId = 23
                        },
                        new
                        {
                            EntryId = new Guid("bcc33140-2722-4910-852a-9b17cc11b0ae"),
                            PresetId = 3,
                            ToppingId = 14
                        },
                        new
                        {
                            EntryId = new Guid("070b4725-da44-4a24-9145-e615579325ea"),
                            PresetId = 3,
                            ToppingId = 18
                        },
                        new
                        {
                            EntryId = new Guid("5a2d4176-0417-4f50-b9bb-e7bbd844d107"),
                            PresetId = 3,
                            ToppingId = 19
                        },
                        new
                        {
                            EntryId = new Guid("bbb953d7-4b8b-4d28-b0b6-81f7e5531dfe"),
                            PresetId = 3,
                            ToppingId = 21
                        },
                        new
                        {
                            EntryId = new Guid("3b5573c0-5f2e-491e-bdf5-8dad5e7242d6"),
                            PresetId = 3,
                            ToppingId = 22
                        },
                        new
                        {
                            EntryId = new Guid("69772fd6-7885-4b6d-a6d0-3ba54fc17ad2"),
                            PresetId = 3,
                            ToppingId = 26
                        },
                        new
                        {
                            EntryId = new Guid("31f67151-e972-43dc-81e4-4425acda1615"),
                            PresetId = 4,
                            ToppingId = 3
                        },
                        new
                        {
                            EntryId = new Guid("b4738f90-8cd3-4757-9637-1e60b0148478"),
                            PresetId = 4,
                            ToppingId = 12
                        },
                        new
                        {
                            EntryId = new Guid("e1d403c7-3c15-4657-8bbb-d1ab81e5d66a"),
                            PresetId = 4,
                            ToppingId = 14
                        },
                        new
                        {
                            EntryId = new Guid("4290a837-f5ee-4018-a09d-0721287dcecb"),
                            PresetId = 4,
                            ToppingId = 17
                        },
                        new
                        {
                            EntryId = new Guid("f280d0e1-90ce-4c8f-95ac-1c66c28dec6f"),
                            PresetId = 4,
                            ToppingId = 18
                        },
                        new
                        {
                            EntryId = new Guid("5959986f-d29e-4736-bf29-cc3891231ec5"),
                            PresetId = 4,
                            ToppingId = 22
                        },
                        new
                        {
                            EntryId = new Guid("6d4505c0-3c38-44ea-b469-fb7734923af8"),
                            PresetId = 4,
                            ToppingId = 26
                        },
                        new
                        {
                            EntryId = new Guid("045210f6-c733-47b0-9eb4-135170c6834b"),
                            PresetId = 5,
                            ToppingId = 6
                        },
                        new
                        {
                            EntryId = new Guid("5d5c268d-816a-4440-8f0b-0a2957d0bd77"),
                            PresetId = 5,
                            ToppingId = 7
                        },
                        new
                        {
                            EntryId = new Guid("f0259366-3014-412a-8074-7f95b1d6068b"),
                            PresetId = 5,
                            ToppingId = 8
                        },
                        new
                        {
                            EntryId = new Guid("0b427e11-e53a-4413-af11-093c6178b112"),
                            PresetId = 5,
                            ToppingId = 12
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.ToppingCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("ToppingCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Cheese"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Meat"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Vegetables"
                        });
                });

            modelBuilder.Entity("DigitalPizzaAPI.Models.DbModels.ToppingList", b =>
                {
                    b.Property<int>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToppingId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToppingId");

                    b.ToTable("ToppingList");

                    b.HasData(
                        new
                        {
                            ToppingId = 1,
                            CategoryId = 1,
                            IsPremium = true,
                            Name = "Asiago Cheese"
                        },
                        new
                        {
                            ToppingId = 2,
                            CategoryId = 1,
                            IsPremium = true,
                            Name = "Cheddar Cheese"
                        },
                        new
                        {
                            ToppingId = 3,
                            CategoryId = 1,
                            IsPremium = true,
                            Name = "Feta Cheese"
                        },
                        new
                        {
                            ToppingId = 4,
                            CategoryId = 1,
                            IsPremium = true,
                            Name = "Goat Cheese"
                        },
                        new
                        {
                            ToppingId = 5,
                            CategoryId = 1,
                            IsPremium = true,
                            Name = "Parmigiano Cheese"
                        },
                        new
                        {
                            ToppingId = 6,
                            CategoryId = 2,
                            IsPremium = false,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            ToppingId = 7,
                            CategoryId = 2,
                            IsPremium = true,
                            Name = "Bacon"
                        },
                        new
                        {
                            ToppingId = 8,
                            CategoryId = 2,
                            IsPremium = false,
                            Name = "Spicy Sausage"
                        },
                        new
                        {
                            ToppingId = 9,
                            CategoryId = 2,
                            IsPremium = true,
                            Name = "Grilled Chicken"
                        },
                        new
                        {
                            ToppingId = 10,
                            CategoryId = 2,
                            IsPremium = true,
                            Name = "Anchovies"
                        },
                        new
                        {
                            ToppingId = 11,
                            CategoryId = 2,
                            IsPremium = false,
                            Name = "Smoked Ham"
                        },
                        new
                        {
                            ToppingId = 12,
                            CategoryId = 2,
                            IsPremium = false,
                            Name = "Ground Beef"
                        },
                        new
                        {
                            ToppingId = 13,
                            CategoryId = 3,
                            IsPremium = true,
                            Name = "Artichokes"
                        },
                        new
                        {
                            ToppingId = 14,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Black Olives"
                        },
                        new
                        {
                            ToppingId = 15,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Broccoli"
                        },
                        new
                        {
                            ToppingId = 16,
                            CategoryId = 3,
                            IsPremium = true,
                            Name = "Bruschetta"
                        },
                        new
                        {
                            ToppingId = 17,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Roasted Garlic"
                        },
                        new
                        {
                            ToppingId = 18,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Green Olives"
                        },
                        new
                        {
                            ToppingId = 19,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Green Peppers"
                        },
                        new
                        {
                            ToppingId = 20,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Hot Peppers"
                        },
                        new
                        {
                            ToppingId = 21,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            ToppingId = 22,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Onions"
                        },
                        new
                        {
                            ToppingId = 23,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Pineapple"
                        },
                        new
                        {
                            ToppingId = 24,
                            CategoryId = 3,
                            IsPremium = true,
                            Name = "Red Peppers"
                        },
                        new
                        {
                            ToppingId = 25,
                            CategoryId = 3,
                            IsPremium = true,
                            Name = "Spinach"
                        },
                        new
                        {
                            ToppingId = 26,
                            CategoryId = 3,
                            IsPremium = false,
                            Name = "Tomatoes"
                        },
                        new
                        {
                            ToppingId = 27,
                            CategoryId = 3,
                            IsPremium = true,
                            Name = "Zucchini"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
